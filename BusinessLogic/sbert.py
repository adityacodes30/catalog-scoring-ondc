# -*- coding: utf-8 -*-
"""SBERT.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DmYHESi9IXESgD08TxN7tTLVT2pbA8KX
"""

#!pip install -U sentence-transformers

'''    from scipy.spatial import distance
    from sentence_transformers import SentenceTransformer
    model = SentenceTransformer('all-MiniLM-L6-v2')

    # Sample sentence
    sentences = ["mustard is 9",
                "iphone is 8.87",
                ]


    test = "mustard"
    print('Test sentence:',test)
    test_vec = model.encode([test])[0]


    for sent in sentences:
        similarity_score = 1-distance.cosine(test_vec, model.encode([sent])[0])
        print(f'\nFor {sent}\nSimilarity Score = {similarity_score} ')'''

from scipy.spatial import distance
from sentence_transformers import SentenceTransformer

def calculate_similarity_score(text1, text2):
    # Load the sentence transformer model
    model = SentenceTransformer('all-MiniLM-L6-v2')

    # Encode the input texts
    text1_vec = model.encode([text1])[0]
    text2_vec = model.encode([text2])[0]

    # Calculate the cosine similarity score
    similarity_score = 1 - distance.cosine(text1_vec, text2_vec)

    return similarity_score

# Sample usage
text1 = "all new lipton greentea"
text2 = "aadat daal lo"
score = calculate_similarity_score(text1, text2)
print(f"Similarity score between '{text1}' and '{text2}': {score}")